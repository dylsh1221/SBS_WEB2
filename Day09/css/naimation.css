* { margin: 0; padding: 0; border: 0; box-sizing: border-box; }
ol, ul { list-style: none; }

/* 
    animation-name :
    - @keyframes 애니메이션 이름을 지정합니다.

    animation-duration :
    - 한 싸이클 애니메이션에 소요되는 시간을 초단위(s) 또는 밀리 초단위(ms)로 지정합니다.

    animation-timing-function :
    - 애니메이션 효과를 위한 타이밍 함수 지정 (ease)

    animation-delay :
    - 요소가 로드된 시점과 에니매이션이 실제로 시작하는 사이에 대기하는 시간을 초 단위(s) 또는 밀리 초단위(ms)로 지정합니다.

    animation-iteration-count :
    - 애니메이션이 종료된 이 후 반복될 때 진행하는 방향을 지정 (default = normal)

    animation-fill-mode :
    - 애니메이션이 미실행 & 종료 후 대기할 때 요소의 스타일을 설정합니다.

    animation-play-state :
    - 애니메이션  재생 상태(재생 or 중지)를 설정합니다. (default = running)

    animation :
    - 위의 모든 애니메이션 프로퍼치를 한번에 지정합니다.
*/

/* 
    @keyframes
    - @keyframes rule = 애니메이션 스토리를 저장하는 키워드
    @keyframes 명칭 {
        from {} 애니메이션 시작점
        to {} 애니메이션 끝점
        =================================
        0% {}
        25% {}
        50% {}
        80% {}
        100% {}
*/

div {
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: move, fadeout, changeCOlor;
    animation-duration: 3s;
    animation-iteration-count: infinite;
}

@keyframes move {
    0% {left: 0; top: 0;}
    20% {top: 50px;}
    80% {top: 50px;}
    100% {left: 300px; top: 0;}
}

/* 
    2. naimation-name
    - 하나 이상의 애니메이션을 지정할 수 있다.
*/

@keyframes fadeout {
    from {opacity: 1;}
    to {opacity: 0;}
}

@keyframes changeCOlor {
    0% {background: red;}
    100% {background: blue;}
}

/* 
    3. animation-duration
    - 한 싸이클의 애니메이션에 소요되는 시간을 초 & 밀리초 단위로 지정
    - (1000ms = 1s , 500ms = 0.5s)
    - animation을 사용할 때는 반드시 duration 속성이 필수로 지정되어야 합니다.
    - 지정하지 않을 경우 default = 0s 로 세팅되기 때문에 애니메이션이 실행 x
*/

div {
    animation-duration: 3s;
}

/* 
    4. animation-timing-function = 가속도
    - 애니메이션 가속도 효과를 주기 위한 수치 함수를 지정
    - default - linear (가속도 없음)
*/

div {
    animation-timing-function: ease-in;
}

/* 
    5. animation-delay
    - 요소가 로드된 시점과 애니메이션이 실제로 시작하는 사이의 대기시간 지정
    - 초 혹은 밀리초 단위 사용
*/

div {
    animation-delay: 2s;
}

/* 
    6. animation-iteration-count
    - 애니메이션 주기의 횟수를 지정
    - default : 1 , 숫자만큼 반복 , infinite = 무한반복
*/

div {
    animation-iteration-count: 2;
}

/* 
    7. animation-direction
    - 애니메이션이 종료된 이 후 반복될 때 진행하는 방향을 지정
    - animation-iteration-count 값이 1초과일 때만 구현됩니다.
    - alternate : 홀수는 정방향 , 짝수는 반대방향
*/

article {
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: ani_1;
    animation-duration: 2.5s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}

@keyframes ani_1 {
    0% {
        background: red;
        left: 0; top: 0;
    }
    25% {
        background: orange;
        left: 200px;
        top: 0px;
    }
    50% {
        background: yellow;
        left: 200px; top: 200px;
    }
    75% {
        background: green;
        left: 0; top: 200px;
    }
    100% {
        background: red;
        left: 0; top: 0;
    }
}

/* 
    8. animation-fill-mode
    - 애니메이면이 미실행 & 종료된 시점에서 해당 요소의 스타일을 지정
*/

section {
    width: 100px;
    height: 100px;
    font: 1rem/100px "arial";
    text-align: center;
    background: red;
    position: relative;
    animation-name: ani_2;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-delay: 2s;
}

@keyframes ani_2 {
    0% {
        left: 0;
        background: green;
    }
    100% {
        left: 200px;
        background: blue;
    }
}

section:nth-of-type(1) {
    animation-fill-mode: none;
}

section:nth-of-type(2) {
    animation-fill-mode: forwards;
}

section:nth-of-type(3) {
    animation-fill-mode: backwards;
}

section:nth-of-type(4) {
    animation-fill-mode: both;
}

/* 
    9. animation-play-stste
    애니메이션 재생 상태 (재생 & 종료)를 지정
    default = running
*/

aside {
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: move2;
    animation-duration: 2s;
    animation-iteration-count: infinite;
}

aside:hover {
    background: blue;
    animation-play-state: paused;
}

aside:active {
    background: green;
    animation-play-state: running;
}

@keyframes mone2 {
    from {left: 0;}
    to {left: 200px;}
}

main { 
    width: 150px;
    height: 150px;
    background: cornflowerblue;
    margin: 50px;
    position: relative;
    /* animation: name / duration / timing-function / delay / iteration-count / fill-mode / play-state */
    animation: rotation 2s linear 0s infinite alternate;
}

main:hover {
    animation-play-state: paused;
}

@keyframes rotation {
    0% {
        transform: rotate(0deg);
        left: 0;
    }
    33% {}
    66% {}
    100% {
        transform: rotate(360deg);
        left: 400px;
    }
}

nav {
    width: 151px;
    height: 151px;
    background: url(../img/rainbow_ball.png)no-repeat 0 0;
    animation: rainbow 5s infinite steps(6);
    position: relative;
}

@keyframes rainbow {
    0% {
        background-position: 0 0;
        left: 0;
    }
    100% {
        background-position: -906px 0;
        left: 300px;
    }
}